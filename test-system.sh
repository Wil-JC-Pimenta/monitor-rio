#!/bin/bash

echo "๐งช TESTANDO SISTEMA MONITOR RIO PIRACICABA"
echo "========================================="
echo ""

# Testar se o PHP estรก funcionando
echo "1๏ธโฃ Testando PHP..."
php -v
if [ $? -eq 0 ]; then
    echo "โ PHP funcionando"
else
    echo "โ PHP com problemas"
fi

# Testar se o Laravel estรก funcionando
echo ""
echo "2๏ธโฃ Testando Laravel..."
php artisan --version
if [ $? -eq 0 ]; then
    echo "โ Laravel funcionando"
else
    echo "โ Laravel com problemas"
fi

# Testar se o banco estรก conectado
echo ""
echo "3๏ธโฃ Testando conexรฃo com banco..."
php artisan tinker --execute="echo 'Banco conectado: ' . (DB::connection()->getPdo() ? 'Sim' : 'Nรฃo');"
if [ $? -eq 0 ]; then
    echo "โ Banco conectado"
else
    echo "โ Banco com problemas"
fi

# Testar comando de busca de dados
echo ""
echo "4๏ธโฃ Testando comando de busca de dados..."
php artisan river:fetch --mock
if [ $? -eq 0 ]; then
    echo "โ Comando de busca funcionando"
else
    echo "โ Comando de busca com problemas"
fi

# Testar se o Nginx estรก rodando
echo ""
echo "5๏ธโฃ Testando Nginx..."
systemctl is-active nginx
if [ $? -eq 0 ]; then
    echo "โ Nginx rodando"
else
    echo "โ Nginx nรฃo estรก rodando"
fi

# Testar se o PostgreSQL estรก rodando
echo ""
echo "6๏ธโฃ Testando PostgreSQL..."
systemctl is-active postgresql
if [ $? -eq 0 ]; then
    echo "โ PostgreSQL rodando"
else
    echo "โ PostgreSQL nรฃo estรก rodando"
fi

# Testar API endpoints
echo ""
echo "7๏ธโฃ Testando API endpoints..."
echo "Testando /api/river-data/stats..."
curl -s http://localhost/api/river-data/stats | head -c 100
echo ""
echo "Testando /api/stations..."
curl -s http://localhost/api/stations | head -c 100
echo ""

# Mostrar status geral
echo ""
echo "๐ STATUS GERAL DO SISTEMA:"
echo "=========================="
echo "๐ Nginx: $(systemctl is-active nginx)"
echo "๐ PostgreSQL: $(systemctl is-active postgresql)"
echo "๐ PHP-FPM: $(systemctl is-active php8.4-fpm)"
echo "๐ Dados mock: $(php artisan river:fetch --mock > /dev/null 2>&1 && echo 'OK' || echo 'ERRO')"

echo ""
echo "๐ TESTE CONCLUรDO!"
echo "=================="
